[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pydantic-typer"
dynamic = ["version"]
description = 'Typer extension to enable pydantic support'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Patrick DÃ¼ggelin", email = "patrick.dueggelin@live.de" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pydantic",
  "typer",
]

[project.urls]
Documentation = "https://github.com/pypae/pydantic-typer#readme"
Issues = "https://github.com/pypae/pydantic-typer/issues"
Source = "https://github.com/pypae/pydantic-typer"

[tool.hatch.version]
path = "src/pydantic_typer/__about__.py"

[tool.hatch.envs.dev]
extra-dependencies = [
  "mypy>=1.0.0",
  "pytest",
  "coverage",
  "smokeshow",
]

[tool.hatch.envs.dev.scripts]
check = "mypy --install-types --non-interactive {args:src/pydantic_typer unit_tests}"

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.12", "3.11", "3.10", "3.9", "3.8"]

[tool.hatch.envs.hatch-test]
default-args = [""]
parallel = true

[tool.hatch.envs.hatch-test.env-vars]
TERMINAL_WIDTH = "3000"
_TYPER_FORCE_DISABLE_TERMINAL = "1"

[tool.hatch.envs.hatch-static-analysis]
config-path = "ruff_defaults.toml"

[tool.ruff]
extend = "ruff_defaults.toml"

[tool.ruff.per-file-ignores]
# Allow assert in tests
"unit_tests/*.py" = ["S101"]

[tool.coverage.run]
source_pkgs = ["pydantic_typer", "unit_tests"]
branch = true
parallel = true
omit = [
  "src/pydantic_typer/__about__.py",
]

[tool.coverage.paths]
pydantic_typer = ["src/pydantic_typer", "*/pydantic-typer/src/pydantic_typer"]
unit_tests = ["unit_tests", "*/pydantic-typer/unit_tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
show_missing = "true"

[tool.pytest.ini_options]
# Some cli and completion tests don't work as expected (Because we run coverage on a different module?)
addopts = "-k 'not test_cli and not test_completion'"
testpaths = [
    "unit_tests",
    "regression_tests/conftest.py",
    "regression_tests/typer/tests",
]
